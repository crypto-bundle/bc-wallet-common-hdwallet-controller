//    MIT License
//
//    Copyright (c) 2022-2024 Aleksei Kotelnikov(gudron2s@gmail.com)
//
//    Permission is hereby granted, free of charge, to any person obtaining a copy
//    of this software and associated documentation files (the "Software"), to deal
//    in the Software without restriction, including without limitation the rights
//    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//    copies of the Software, and to permit persons to whom the Software is
//    furnished to do so, subject to the following conditions:
//
//    The above copyright notice and this permission notice shall be included in all
//    copies or substantial portions of the Software.
//
//    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//    SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.2
// source: hdwallet_api.proto

package hdwallet

import (
	common "github.com/crypto-bundle/bc-wallet-common-hdwallet-controller/pkg/grpc/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *GenerateMnemonicRequest) Reset() {
	*x = GenerateMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMnemonicRequest) ProtoMessage() {}

func (x *GenerateMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMnemonicRequest.ProtoReflect.Descriptor instead.
func (*GenerateMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateMnemonicRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type GenerateMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity      *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	EncryptedMnemonicData []byte                         `protobuf:"bytes,2,opt,name=EncryptedMnemonicData,proto3" json:"EncryptedMnemonicData,omitempty"`
}

func (x *GenerateMnemonicResponse) Reset() {
	*x = GenerateMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMnemonicResponse) ProtoMessage() {}

func (x *GenerateMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMnemonicResponse.ProtoReflect.Descriptor instead.
func (*GenerateMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateMnemonicResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *GenerateMnemonicResponse) GetEncryptedMnemonicData() []byte {
	if x != nil {
		return x.EncryptedMnemonicData
	}
	return nil
}

type EncryptMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	MnemonicData     []byte                         `protobuf:"bytes,2,opt,name=MnemonicData,proto3" json:"MnemonicData,omitempty"`
}

func (x *EncryptMnemonicRequest) Reset() {
	*x = EncryptMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMnemonicRequest) ProtoMessage() {}

func (x *EncryptMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMnemonicRequest.ProtoReflect.Descriptor instead.
func (*EncryptMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{2}
}

func (x *EncryptMnemonicRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *EncryptMnemonicRequest) GetMnemonicData() []byte {
	if x != nil {
		return x.MnemonicData
	}
	return nil
}

type EncryptMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity      *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	EncryptedMnemonicData []byte                         `protobuf:"bytes,2,opt,name=EncryptedMnemonicData,proto3" json:"EncryptedMnemonicData,omitempty"`
}

func (x *EncryptMnemonicResponse) Reset() {
	*x = EncryptMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptMnemonicResponse) ProtoMessage() {}

func (x *EncryptMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptMnemonicResponse.ProtoReflect.Descriptor instead.
func (*EncryptMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{3}
}

func (x *EncryptMnemonicResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *EncryptMnemonicResponse) GetEncryptedMnemonicData() []byte {
	if x != nil {
		return x.EncryptedMnemonicData
	}
	return nil
}

type ValidateMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	MnemonicData     []byte                         `protobuf:"bytes,2,opt,name=MnemonicData,proto3" json:"MnemonicData,omitempty"`
}

func (x *ValidateMnemonicRequest) Reset() {
	*x = ValidateMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMnemonicRequest) ProtoMessage() {}

func (x *ValidateMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMnemonicRequest.ProtoReflect.Descriptor instead.
func (*ValidateMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateMnemonicRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *ValidateMnemonicRequest) GetMnemonicData() []byte {
	if x != nil {
		return x.MnemonicData
	}
	return nil
}

type ValidateMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	IsValid          bool                           `protobuf:"varint,2,opt,name=IsValid,proto3" json:"IsValid,omitempty"`
}

func (x *ValidateMnemonicResponse) Reset() {
	*x = ValidateMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMnemonicResponse) ProtoMessage() {}

func (x *ValidateMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMnemonicResponse.ProtoReflect.Descriptor instead.
func (*ValidateMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateMnemonicResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *ValidateMnemonicResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type LoadMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity      *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	TimeToLive            uint64                         `protobuf:"varint,2,opt,name=TimeToLive,proto3" json:"TimeToLive,omitempty"`
	EncryptedMnemonicData []byte                         `protobuf:"bytes,3,opt,name=EncryptedMnemonicData,proto3" json:"EncryptedMnemonicData,omitempty"`
}

func (x *LoadMnemonicRequest) Reset() {
	*x = LoadMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadMnemonicRequest) ProtoMessage() {}

func (x *LoadMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadMnemonicRequest.ProtoReflect.Descriptor instead.
func (*LoadMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{6}
}

func (x *LoadMnemonicRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *LoadMnemonicRequest) GetTimeToLive() uint64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *LoadMnemonicRequest) GetEncryptedMnemonicData() []byte {
	if x != nil {
		return x.EncryptedMnemonicData
	}
	return nil
}

type LoadMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *LoadMnemonicResponse) Reset() {
	*x = LoadMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadMnemonicResponse) ProtoMessage() {}

func (x *LoadMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadMnemonicResponse.ProtoReflect.Descriptor instead.
func (*LoadMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{7}
}

func (x *LoadMnemonicResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type UnLoadMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *UnLoadMnemonicRequest) Reset() {
	*x = UnLoadMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadMnemonicRequest) ProtoMessage() {}

func (x *UnLoadMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadMnemonicRequest.ProtoReflect.Descriptor instead.
func (*UnLoadMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{8}
}

func (x *UnLoadMnemonicRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type UnLoadMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *UnLoadMnemonicResponse) Reset() {
	*x = UnLoadMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadMnemonicResponse) ProtoMessage() {}

func (x *UnLoadMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadMnemonicResponse.ProtoReflect.Descriptor instead.
func (*UnLoadMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{9}
}

func (x *UnLoadMnemonicResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type UnLoadMultipleMnemonicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity []*common.MnemonicWalletIdentity `protobuf:"bytes,1,rep,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *UnLoadMultipleMnemonicsRequest) Reset() {
	*x = UnLoadMultipleMnemonicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadMultipleMnemonicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadMultipleMnemonicsRequest) ProtoMessage() {}

func (x *UnLoadMultipleMnemonicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadMultipleMnemonicsRequest.ProtoReflect.Descriptor instead.
func (*UnLoadMultipleMnemonicsRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{10}
}

func (x *UnLoadMultipleMnemonicsRequest) GetMnemonicIdentity() []*common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type UnLoadMultipleMnemonicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity []*common.MnemonicWalletIdentity `protobuf:"bytes,1,rep,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *UnLoadMultipleMnemonicsResponse) Reset() {
	*x = UnLoadMultipleMnemonicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadMultipleMnemonicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadMultipleMnemonicsResponse) ProtoMessage() {}

func (x *UnLoadMultipleMnemonicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadMultipleMnemonicsResponse.ProtoReflect.Descriptor instead.
func (*UnLoadMultipleMnemonicsResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{11}
}

func (x *UnLoadMultipleMnemonicsResponse) GetMnemonicIdentity() []*common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AccountIdentifier        *common.AccountIdentity        `protobuf:"bytes,2,opt,name=AccountIdentifier,proto3" json:"AccountIdentifier,omitempty"`
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{12}
}

func (x *GetAccountRequest) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *GetAccountRequest) GetAccountIdentifier() *common.AccountIdentity {
	if x != nil {
		return x.AccountIdentifier
	}
	return nil
}

type GetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AccountIdentifier        *common.AccountIdentity        `protobuf:"bytes,2,opt,name=AccountIdentifier,proto3" json:"AccountIdentifier,omitempty"`
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetAccountResponse) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *GetAccountResponse) GetAccountIdentifier() *common.AccountIdentity {
	if x != nil {
		return x.AccountIdentifier
	}
	return nil
}

type GetMultipleAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	Parameters               *anypb.Any                     `protobuf:"bytes,2,opt,name=Parameters,proto3" json:"Parameters,omitempty"`
}

func (x *GetMultipleAccountRequest) Reset() {
	*x = GetMultipleAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleAccountRequest) ProtoMessage() {}

func (x *GetMultipleAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleAccountRequest.ProtoReflect.Descriptor instead.
func (*GetMultipleAccountRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetMultipleAccountRequest) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *GetMultipleAccountRequest) GetParameters() *anypb.Any {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type GetMultipleAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity      `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AddressIdentitiesCount   uint64                              `protobuf:"varint,3,opt,name=AddressIdentitiesCount,proto3" json:"AddressIdentitiesCount,omitempty"`
	AddressIdentities        []*common.DerivationAddressIdentity `protobuf:"bytes,4,rep,name=AddressIdentities,proto3" json:"AddressIdentities,omitempty"`
}

func (x *GetMultipleAccountResponse) Reset() {
	*x = GetMultipleAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleAccountResponse) ProtoMessage() {}

func (x *GetMultipleAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleAccountResponse.ProtoReflect.Descriptor instead.
func (*GetMultipleAccountResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetMultipleAccountResponse) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *GetMultipleAccountResponse) GetAddressIdentitiesCount() uint64 {
	if x != nil {
		return x.AddressIdentitiesCount
	}
	return 0
}

func (x *GetMultipleAccountResponse) GetAddressIdentities() []*common.DerivationAddressIdentity {
	if x != nil {
		return x.AddressIdentities
	}
	return nil
}

type LoadAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AccountIdentifier        *common.AccountIdentity        `protobuf:"bytes,2,opt,name=AccountIdentifier,proto3" json:"AccountIdentifier,omitempty"`
}

func (x *LoadAccountRequest) Reset() {
	*x = LoadAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAccountRequest) ProtoMessage() {}

func (x *LoadAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAccountRequest.ProtoReflect.Descriptor instead.
func (*LoadAccountRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{16}
}

func (x *LoadAccountRequest) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *LoadAccountRequest) GetAccountIdentifier() *common.AccountIdentity {
	if x != nil {
		return x.AccountIdentifier
	}
	return nil
}

type LoadAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AccountIdentifier        *common.AccountIdentity        `protobuf:"bytes,2,opt,name=AccountIdentifier,proto3" json:"AccountIdentifier,omitempty"`
}

func (x *LoadAccountsResponse) Reset() {
	*x = LoadAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAccountsResponse) ProtoMessage() {}

func (x *LoadAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAccountsResponse.ProtoReflect.Descriptor instead.
func (*LoadAccountsResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{17}
}

func (x *LoadAccountsResponse) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *LoadAccountsResponse) GetAccountIdentifier() *common.AccountIdentity {
	if x != nil {
		return x.AccountIdentifier
	}
	return nil
}

type SignDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AccountIdentifier        *common.AccountIdentity        `protobuf:"bytes,2,opt,name=AccountIdentifier,proto3" json:"AccountIdentifier,omitempty"`
	DataForSign              []byte                         `protobuf:"bytes,3,opt,name=DataForSign,proto3" json:"DataForSign,omitempty"`
}

func (x *SignDataRequest) Reset() {
	*x = SignDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignDataRequest) ProtoMessage() {}

func (x *SignDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignDataRequest.ProtoReflect.Descriptor instead.
func (*SignDataRequest) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{18}
}

func (x *SignDataRequest) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *SignDataRequest) GetAccountIdentifier() *common.AccountIdentity {
	if x != nil {
		return x.AccountIdentifier
	}
	return nil
}

func (x *SignDataRequest) GetDataForSign() []byte {
	if x != nil {
		return x.DataForSign
	}
	return nil
}

type SignDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicWalletIdentifier *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicWalletIdentifier,proto3" json:"MnemonicWalletIdentifier,omitempty"`
	AccountIdentifier        *common.AccountIdentity        `protobuf:"bytes,2,opt,name=AccountIdentifier,proto3" json:"AccountIdentifier,omitempty"`
	SignedData               []byte                         `protobuf:"bytes,3,opt,name=SignedData,proto3" json:"SignedData,omitempty"`
}

func (x *SignDataResponse) Reset() {
	*x = SignDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hdwallet_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignDataResponse) ProtoMessage() {}

func (x *SignDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdwallet_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignDataResponse.ProtoReflect.Descriptor instead.
func (*SignDataResponse) Descriptor() ([]byte, []int) {
	return file_hdwallet_api_proto_rawDescGZIP(), []int{19}
}

func (x *SignDataResponse) GetMnemonicWalletIdentifier() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicWalletIdentifier
	}
	return nil
}

func (x *SignDataResponse) GetAccountIdentifier() *common.AccountIdentity {
	if x != nil {
		return x.AccountIdentifier
	}
	return nil
}

func (x *SignDataResponse) GetSignedData() []byte {
	if x != nil {
		return x.SignedData
	}
	return nil
}

var File_hdwallet_api_proto protoreflect.FileDescriptor

var file_hdwallet_api_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x17, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a,
	0x17, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x4c, 0x6f,
	0x61, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a,
	0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x63, 0x0a, 0x15, 0x55, 0x6e, 0x4c, 0x6f, 0x61,
	0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x64, 0x0a, 0x16,
	0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x6c, 0x0a, 0x1e, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x6d, 0x0a, 0x1f, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0xb6, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x45, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x11, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a,
	0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x11, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x22, 0xb9, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x18, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x18, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a,
	0x0f, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x18, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x11,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x18, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x18, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x32, 0xce, 0x07,
	0x0a, 0x0b, 0x48, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x70, 0x69, 0x12, 0x63, 0x0a,
	0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x12, 0x25, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x0f, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x24, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x64,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x25, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x4c, 0x6f, 0x61,
	0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x21, 0x2e, 0x68, 0x64, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68,
	0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x12, 0x23, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x64, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x78, 0x0a, 0x17, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x12, 0x2c, 0x2e, 0x68,
	0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x4c, 0x6f,
	0x61, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x68, 0x64, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x68, 0x64, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x68, 0x64, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0b, 0x4c, 0x6f,
	0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x68, 0x64, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68, 0x64,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e,
	0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x68,
	0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x51,
	0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2f, 0x62, 0x63, 0x2d, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x68, 0x64, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hdwallet_api_proto_rawDescOnce sync.Once
	file_hdwallet_api_proto_rawDescData = file_hdwallet_api_proto_rawDesc
)

func file_hdwallet_api_proto_rawDescGZIP() []byte {
	file_hdwallet_api_proto_rawDescOnce.Do(func() {
		file_hdwallet_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_hdwallet_api_proto_rawDescData)
	})
	return file_hdwallet_api_proto_rawDescData
}

var file_hdwallet_api_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_hdwallet_api_proto_goTypes = []interface{}{
	(*GenerateMnemonicRequest)(nil),          // 0: hdwallet_api.GenerateMnemonicRequest
	(*GenerateMnemonicResponse)(nil),         // 1: hdwallet_api.GenerateMnemonicResponse
	(*EncryptMnemonicRequest)(nil),           // 2: hdwallet_api.EncryptMnemonicRequest
	(*EncryptMnemonicResponse)(nil),          // 3: hdwallet_api.EncryptMnemonicResponse
	(*ValidateMnemonicRequest)(nil),          // 4: hdwallet_api.ValidateMnemonicRequest
	(*ValidateMnemonicResponse)(nil),         // 5: hdwallet_api.ValidateMnemonicResponse
	(*LoadMnemonicRequest)(nil),              // 6: hdwallet_api.LoadMnemonicRequest
	(*LoadMnemonicResponse)(nil),             // 7: hdwallet_api.LoadMnemonicResponse
	(*UnLoadMnemonicRequest)(nil),            // 8: hdwallet_api.UnLoadMnemonicRequest
	(*UnLoadMnemonicResponse)(nil),           // 9: hdwallet_api.UnLoadMnemonicResponse
	(*UnLoadMultipleMnemonicsRequest)(nil),   // 10: hdwallet_api.UnLoadMultipleMnemonicsRequest
	(*UnLoadMultipleMnemonicsResponse)(nil),  // 11: hdwallet_api.UnLoadMultipleMnemonicsResponse
	(*GetAccountRequest)(nil),                // 12: hdwallet_api.GetAccountRequest
	(*GetAccountResponse)(nil),               // 13: hdwallet_api.GetAccountResponse
	(*GetMultipleAccountRequest)(nil),        // 14: hdwallet_api.GetMultipleAccountRequest
	(*GetMultipleAccountResponse)(nil),       // 15: hdwallet_api.GetMultipleAccountResponse
	(*LoadAccountRequest)(nil),               // 16: hdwallet_api.LoadAccountRequest
	(*LoadAccountsResponse)(nil),             // 17: hdwallet_api.LoadAccountsResponse
	(*SignDataRequest)(nil),                  // 18: hdwallet_api.SignDataRequest
	(*SignDataResponse)(nil),                 // 19: hdwallet_api.SignDataResponse
	(*common.MnemonicWalletIdentity)(nil),    // 20: common.MnemonicWalletIdentity
	(*common.AccountIdentity)(nil),           // 21: common.AccountIdentity
	(*anypb.Any)(nil),                        // 22: google.protobuf.Any
	(*common.DerivationAddressIdentity)(nil), // 23: common.DerivationAddressIdentity
}
var file_hdwallet_api_proto_depIdxs = []int32{
	20, // 0: hdwallet_api.GenerateMnemonicRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 1: hdwallet_api.GenerateMnemonicResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 2: hdwallet_api.EncryptMnemonicRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 3: hdwallet_api.EncryptMnemonicResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 4: hdwallet_api.ValidateMnemonicRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 5: hdwallet_api.ValidateMnemonicResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 6: hdwallet_api.LoadMnemonicRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 7: hdwallet_api.LoadMnemonicResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 8: hdwallet_api.UnLoadMnemonicRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 9: hdwallet_api.UnLoadMnemonicResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 10: hdwallet_api.UnLoadMultipleMnemonicsRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 11: hdwallet_api.UnLoadMultipleMnemonicsResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	20, // 12: hdwallet_api.GetAccountRequest.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	21, // 13: hdwallet_api.GetAccountRequest.AccountIdentifier:type_name -> common.AccountIdentity
	20, // 14: hdwallet_api.GetAccountResponse.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	21, // 15: hdwallet_api.GetAccountResponse.AccountIdentifier:type_name -> common.AccountIdentity
	20, // 16: hdwallet_api.GetMultipleAccountRequest.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	22, // 17: hdwallet_api.GetMultipleAccountRequest.Parameters:type_name -> google.protobuf.Any
	20, // 18: hdwallet_api.GetMultipleAccountResponse.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	23, // 19: hdwallet_api.GetMultipleAccountResponse.AddressIdentities:type_name -> common.DerivationAddressIdentity
	20, // 20: hdwallet_api.LoadAccountRequest.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	21, // 21: hdwallet_api.LoadAccountRequest.AccountIdentifier:type_name -> common.AccountIdentity
	20, // 22: hdwallet_api.LoadAccountsResponse.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	21, // 23: hdwallet_api.LoadAccountsResponse.AccountIdentifier:type_name -> common.AccountIdentity
	20, // 24: hdwallet_api.SignDataRequest.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	21, // 25: hdwallet_api.SignDataRequest.AccountIdentifier:type_name -> common.AccountIdentity
	20, // 26: hdwallet_api.SignDataResponse.MnemonicWalletIdentifier:type_name -> common.MnemonicWalletIdentity
	21, // 27: hdwallet_api.SignDataResponse.AccountIdentifier:type_name -> common.AccountIdentity
	0,  // 28: hdwallet_api.HdWalletApi.GenerateMnemonic:input_type -> hdwallet_api.GenerateMnemonicRequest
	2,  // 29: hdwallet_api.HdWalletApi.EncryptMnemonic:input_type -> hdwallet_api.EncryptMnemonicRequest
	4,  // 30: hdwallet_api.HdWalletApi.ValidateMnemonic:input_type -> hdwallet_api.ValidateMnemonicRequest
	6,  // 31: hdwallet_api.HdWalletApi.LoadMnemonic:input_type -> hdwallet_api.LoadMnemonicRequest
	8,  // 32: hdwallet_api.HdWalletApi.UnLoadMnemonic:input_type -> hdwallet_api.UnLoadMnemonicRequest
	10, // 33: hdwallet_api.HdWalletApi.UnLoadMultipleMnemonics:input_type -> hdwallet_api.UnLoadMultipleMnemonicsRequest
	12, // 34: hdwallet_api.HdWalletApi.GetAccount:input_type -> hdwallet_api.GetAccountRequest
	14, // 35: hdwallet_api.HdWalletApi.GetMultipleAccounts:input_type -> hdwallet_api.GetMultipleAccountRequest
	16, // 36: hdwallet_api.HdWalletApi.LoadAccount:input_type -> hdwallet_api.LoadAccountRequest
	18, // 37: hdwallet_api.HdWalletApi.SignData:input_type -> hdwallet_api.SignDataRequest
	1,  // 38: hdwallet_api.HdWalletApi.GenerateMnemonic:output_type -> hdwallet_api.GenerateMnemonicResponse
	3,  // 39: hdwallet_api.HdWalletApi.EncryptMnemonic:output_type -> hdwallet_api.EncryptMnemonicResponse
	5,  // 40: hdwallet_api.HdWalletApi.ValidateMnemonic:output_type -> hdwallet_api.ValidateMnemonicResponse
	7,  // 41: hdwallet_api.HdWalletApi.LoadMnemonic:output_type -> hdwallet_api.LoadMnemonicResponse
	9,  // 42: hdwallet_api.HdWalletApi.UnLoadMnemonic:output_type -> hdwallet_api.UnLoadMnemonicResponse
	11, // 43: hdwallet_api.HdWalletApi.UnLoadMultipleMnemonics:output_type -> hdwallet_api.UnLoadMultipleMnemonicsResponse
	13, // 44: hdwallet_api.HdWalletApi.GetAccount:output_type -> hdwallet_api.GetAccountResponse
	15, // 45: hdwallet_api.HdWalletApi.GetMultipleAccounts:output_type -> hdwallet_api.GetMultipleAccountResponse
	17, // 46: hdwallet_api.HdWalletApi.LoadAccount:output_type -> hdwallet_api.LoadAccountsResponse
	19, // 47: hdwallet_api.HdWalletApi.SignData:output_type -> hdwallet_api.SignDataResponse
	38, // [38:48] is the sub-list for method output_type
	28, // [28:38] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_hdwallet_api_proto_init() }
func file_hdwallet_api_proto_init() {
	if File_hdwallet_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hdwallet_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadMultipleMnemonicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadMultipleMnemonicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hdwallet_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hdwallet_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hdwallet_api_proto_goTypes,
		DependencyIndexes: file_hdwallet_api_proto_depIdxs,
		MessageInfos:      file_hdwallet_api_proto_msgTypes,
	}.Build()
	File_hdwallet_api_proto = out.File
	file_hdwallet_api_proto_rawDesc = nil
	file_hdwallet_api_proto_goTypes = nil
	file_hdwallet_api_proto_depIdxs = nil
}
