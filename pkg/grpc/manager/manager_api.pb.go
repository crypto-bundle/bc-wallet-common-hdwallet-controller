// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.2
// source: manager_api.proto

package manager

import (
	common "github.com/crypto-bundle/bc-wallet-common-hdwallet-manager/pkg/grpc/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignRequestData_ReqStatus int32

const (
	SignRequestData_REQUEST_PLACEHOLDER SignRequestData_ReqStatus = 0
	SignRequestData_REQUEST_CREATED     SignRequestData_ReqStatus = 1
	SignRequestData_REQUEST_PREPARED    SignRequestData_ReqStatus = 2
	SignRequestData_REQUEST_SIGNED      SignRequestData_ReqStatus = 3
	SignRequestData_REQUEST_FAILED      SignRequestData_ReqStatus = 4
)

// Enum value maps for SignRequestData_ReqStatus.
var (
	SignRequestData_ReqStatus_name = map[int32]string{
		0: "REQUEST_PLACEHOLDER",
		1: "REQUEST_CREATED",
		2: "REQUEST_PREPARED",
		3: "REQUEST_SIGNED",
		4: "REQUEST_FAILED",
	}
	SignRequestData_ReqStatus_value = map[string]int32{
		"REQUEST_PLACEHOLDER": 0,
		"REQUEST_CREATED":     1,
		"REQUEST_PREPARED":    2,
		"REQUEST_SIGNED":      3,
		"REQUEST_FAILED":      4,
	}
)

func (x SignRequestData_ReqStatus) Enum() *SignRequestData_ReqStatus {
	p := new(SignRequestData_ReqStatus)
	*p = x
	return p
}

func (x SignRequestData_ReqStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignRequestData_ReqStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_manager_api_proto_enumTypes[0].Descriptor()
}

func (SignRequestData_ReqStatus) Type() protoreflect.EnumType {
	return &file_manager_api_proto_enumTypes[0]
}

func (x SignRequestData_ReqStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignRequestData_ReqStatus.Descriptor instead.
func (SignRequestData_ReqStatus) EnumDescriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{2, 0}
}

type WalletSessionIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionUUID string `protobuf:"bytes,1,opt,name=SessionUUID,proto3" json:"SessionUUID,omitempty"`
}

func (x *WalletSessionIdentity) Reset() {
	*x = WalletSessionIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletSessionIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletSessionIdentity) ProtoMessage() {}

func (x *WalletSessionIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletSessionIdentity.ProtoReflect.Descriptor instead.
func (*WalletSessionIdentity) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{0}
}

func (x *WalletSessionIdentity) GetSessionUUID() string {
	if x != nil {
		return x.SessionUUID
	}
	return ""
}

type SignRequestIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *SignRequestIdentity) Reset() {
	*x = SignRequestIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequestIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequestIdentity) ProtoMessage() {}

func (x *SignRequestIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequestIdentity.ProtoReflect.Descriptor instead.
func (*SignRequestIdentity) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{1}
}

func (x *SignRequestIdentity) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type SignRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *SignRequestIdentity      `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	Status     SignRequestData_ReqStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=manager_api.SignRequestData_ReqStatus" json:"Status,omitempty"`
	CreateAt   uint64                    `protobuf:"varint,3,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *SignRequestData) Reset() {
	*x = SignRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequestData) ProtoMessage() {}

func (x *SignRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequestData.ProtoReflect.Descriptor instead.
func (*SignRequestData) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{2}
}

func (x *SignRequestData) GetIdentifier() *SignRequestIdentity {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *SignRequestData) GetStatus() SignRequestData_ReqStatus {
	if x != nil {
		return x.Status
	}
	return SignRequestData_REQUEST_PLACEHOLDER
}

func (x *SignRequestData) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type GetEnabledWalletsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEnabledWalletsRequest) Reset() {
	*x = GetEnabledWalletsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnabledWalletsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnabledWalletsRequest) ProtoMessage() {}

func (x *GetEnabledWalletsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnabledWalletsRequest.ProtoReflect.Descriptor instead.
func (*GetEnabledWalletsRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{3}
}

type GetEnabledWalletsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletsCount     uint32                           `protobuf:"varint,1,opt,name=WalletsCount,proto3" json:"WalletsCount,omitempty"`
	WalletIdentities []*common.MnemonicWalletIdentity `protobuf:"bytes,2,rep,name=WalletIdentities,proto3" json:"WalletIdentities,omitempty"`
	Bookmarks        map[string]uint32                `protobuf:"bytes,3,rep,name=Bookmarks,proto3" json:"Bookmarks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetEnabledWalletsResponse) Reset() {
	*x = GetEnabledWalletsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnabledWalletsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnabledWalletsResponse) ProtoMessage() {}

func (x *GetEnabledWalletsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnabledWalletsResponse.ProtoReflect.Descriptor instead.
func (*GetEnabledWalletsResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetEnabledWalletsResponse) GetWalletsCount() uint32 {
	if x != nil {
		return x.WalletsCount
	}
	return 0
}

func (x *GetEnabledWalletsResponse) GetWalletIdentities() []*common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentities
	}
	return nil
}

func (x *GetEnabledWalletsResponse) GetBookmarks() map[string]uint32 {
	if x != nil {
		return x.Bookmarks
	}
	return nil
}

type AddNewWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddNewWalletRequest) Reset() {
	*x = AddNewWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewWalletRequest) ProtoMessage() {}

func (x *AddNewWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewWalletRequest.ProtoReflect.Descriptor instead.
func (*AddNewWalletRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{5}
}

type AddNewWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *AddNewWalletResponse) Reset() {
	*x = AddNewWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewWalletResponse) ProtoMessage() {}

func (x *AddNewWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewWalletResponse.ProtoReflect.Descriptor instead.
func (*AddNewWalletResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{6}
}

func (x *AddNewWalletResponse) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type ImportWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicPhrase []byte `protobuf:"bytes,1,opt,name=MnemonicPhrase,proto3" json:"MnemonicPhrase,omitempty"`
}

func (x *ImportWalletRequest) Reset() {
	*x = ImportWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWalletRequest) ProtoMessage() {}

func (x *ImportWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWalletRequest.ProtoReflect.Descriptor instead.
func (*ImportWalletRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{7}
}

func (x *ImportWalletRequest) GetMnemonicPhrase() []byte {
	if x != nil {
		return x.MnemonicPhrase
	}
	return nil
}

type ImportWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *ImportWalletResponse) Reset() {
	*x = ImportWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWalletResponse) ProtoMessage() {}

func (x *ImportWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWalletResponse.ProtoReflect.Descriptor instead.
func (*ImportWalletResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{8}
}

func (x *ImportWalletResponse) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type EnableWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *EnableWalletRequest) Reset() {
	*x = EnableWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableWalletRequest) ProtoMessage() {}

func (x *EnableWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableWalletRequest.ProtoReflect.Descriptor instead.
func (*EnableWalletRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{9}
}

func (x *EnableWalletRequest) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type EnableWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *EnableWalletResponse) Reset() {
	*x = EnableWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableWalletResponse) ProtoMessage() {}

func (x *EnableWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableWalletResponse.ProtoReflect.Descriptor instead.
func (*EnableWalletResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{10}
}

func (x *EnableWalletResponse) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type DisableWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *DisableWalletRequest) Reset() {
	*x = DisableWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableWalletRequest) ProtoMessage() {}

func (x *DisableWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableWalletRequest.ProtoReflect.Descriptor instead.
func (*DisableWalletRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{11}
}

func (x *DisableWalletRequest) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type DisableWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *DisableWalletResponse) Reset() {
	*x = DisableWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableWalletResponse) ProtoMessage() {}

func (x *DisableWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableWalletResponse.ProtoReflect.Descriptor instead.
func (*DisableWalletResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{12}
}

func (x *DisableWalletResponse) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type DisableWalletsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentities []*common.MnemonicWalletIdentity `protobuf:"bytes,1,rep,name=WalletIdentities,proto3" json:"WalletIdentities,omitempty"`
}

func (x *DisableWalletsRequest) Reset() {
	*x = DisableWalletsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableWalletsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableWalletsRequest) ProtoMessage() {}

func (x *DisableWalletsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableWalletsRequest.ProtoReflect.Descriptor instead.
func (*DisableWalletsRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{13}
}

func (x *DisableWalletsRequest) GetWalletIdentities() []*common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentities
	}
	return nil
}

type DisableWalletsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentities []*common.MnemonicWalletIdentity `protobuf:"bytes,1,rep,name=WalletIdentities,proto3" json:"WalletIdentities,omitempty"`
}

func (x *DisableWalletsResponse) Reset() {
	*x = DisableWalletsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableWalletsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableWalletsResponse) ProtoMessage() {}

func (x *DisableWalletsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableWalletsResponse.ProtoReflect.Descriptor instead.
func (*DisableWalletsResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{14}
}

func (x *DisableWalletsResponse) GetWalletIdentities() []*common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentities
	}
	return nil
}

type DerivationAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity    `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity            `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	AddressIdentity  *common.DerivationAddressIdentity `protobuf:"bytes,3,opt,name=AddressIdentity,proto3" json:"AddressIdentity,omitempty"`
}

func (x *DerivationAddressRequest) Reset() {
	*x = DerivationAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivationAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivationAddressRequest) ProtoMessage() {}

func (x *DerivationAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivationAddressRequest.ProtoReflect.Descriptor instead.
func (*DerivationAddressRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{15}
}

func (x *DerivationAddressRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *DerivationAddressRequest) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *DerivationAddressRequest) GetAddressIdentity() *common.DerivationAddressIdentity {
	if x != nil {
		return x.AddressIdentity
	}
	return nil
}

type DerivationAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity    `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity            `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	AddressIdentity  *common.DerivationAddressIdentity `protobuf:"bytes,3,opt,name=AddressIdentity,proto3" json:"AddressIdentity,omitempty"`
}

func (x *DerivationAddressResponse) Reset() {
	*x = DerivationAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivationAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivationAddressResponse) ProtoMessage() {}

func (x *DerivationAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivationAddressResponse.ProtoReflect.Descriptor instead.
func (*DerivationAddressResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{16}
}

func (x *DerivationAddressResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *DerivationAddressResponse) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *DerivationAddressResponse) GetAddressIdentity() *common.DerivationAddressIdentity {
	if x != nil {
		return x.AddressIdentity
	}
	return nil
}

type DerivationAddressByRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity         `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	Ranges           []*common.RangeRequestUnit     `protobuf:"bytes,3,rep,name=Ranges,proto3" json:"Ranges,omitempty"`
}

func (x *DerivationAddressByRangeRequest) Reset() {
	*x = DerivationAddressByRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivationAddressByRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivationAddressByRangeRequest) ProtoMessage() {}

func (x *DerivationAddressByRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivationAddressByRangeRequest.ProtoReflect.Descriptor instead.
func (*DerivationAddressByRangeRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{17}
}

func (x *DerivationAddressByRangeRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *DerivationAddressByRangeRequest) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *DerivationAddressByRangeRequest) GetRanges() []*common.RangeRequestUnit {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type DerivationAddressByRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity       *common.MnemonicWalletIdentity      `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity        *WalletSessionIdentity              `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	AddressIdentitiesCount uint64                              `protobuf:"varint,3,opt,name=AddressIdentitiesCount,proto3" json:"AddressIdentitiesCount,omitempty"`
	AddressIdentities      []*common.DerivationAddressIdentity `protobuf:"bytes,4,rep,name=AddressIdentities,proto3" json:"AddressIdentities,omitempty"`
}

func (x *DerivationAddressByRangeResponse) Reset() {
	*x = DerivationAddressByRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivationAddressByRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivationAddressByRangeResponse) ProtoMessage() {}

func (x *DerivationAddressByRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivationAddressByRangeResponse.ProtoReflect.Descriptor instead.
func (*DerivationAddressByRangeResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{18}
}

func (x *DerivationAddressByRangeResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *DerivationAddressByRangeResponse) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *DerivationAddressByRangeResponse) GetAddressIdentitiesCount() uint64 {
	if x != nil {
		return x.AddressIdentitiesCount
	}
	return 0
}

func (x *DerivationAddressByRangeResponse) GetAddressIdentities() []*common.DerivationAddressIdentity {
	if x != nil {
		return x.AddressIdentities
	}
	return nil
}

type GetWalletInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *GetWalletInfoRequest) Reset() {
	*x = GetWalletInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoRequest) ProtoMessage() {}

func (x *GetWalletInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoRequest.ProtoReflect.Descriptor instead.
func (*GetWalletInfoRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{19}
}

func (x *GetWalletInfoRequest) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type GetWalletInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=WalletIdentity,proto3" json:"WalletIdentity,omitempty"`
}

func (x *GetWalletInfoResponse) Reset() {
	*x = GetWalletInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoResponse) ProtoMessage() {}

func (x *GetWalletInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoResponse.ProtoReflect.Descriptor instead.
func (*GetWalletInfoResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetWalletInfoResponse) GetWalletIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.WalletIdentity
	}
	return nil
}

type StartWalletSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *StartWalletSessionRequest) Reset() {
	*x = StartWalletSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWalletSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWalletSessionRequest) ProtoMessage() {}

func (x *StartWalletSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWalletSessionRequest.ProtoReflect.Descriptor instead.
func (*StartWalletSessionRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{21}
}

func (x *StartWalletSessionRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type StartWalletSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity         `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	SessionStartedAt uint64                         `protobuf:"varint,3,opt,name=SessionStartedAt,proto3" json:"SessionStartedAt,omitempty"`
	SessionExpiredAt uint64                         `protobuf:"varint,4,opt,name=SessionExpiredAt,proto3" json:"SessionExpiredAt,omitempty"`
}

func (x *StartWalletSessionResponse) Reset() {
	*x = StartWalletSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWalletSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWalletSessionResponse) ProtoMessage() {}

func (x *StartWalletSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWalletSessionResponse.ProtoReflect.Descriptor instead.
func (*StartWalletSessionResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{22}
}

func (x *StartWalletSessionResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *StartWalletSessionResponse) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *StartWalletSessionResponse) GetSessionStartedAt() uint64 {
	if x != nil {
		return x.SessionStartedAt
	}
	return 0
}

func (x *StartWalletSessionResponse) GetSessionExpiredAt() uint64 {
	if x != nil {
		return x.SessionExpiredAt
	}
	return 0
}

type GetWalletSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *GetWalletSessionRequest) Reset() {
	*x = GetWalletSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletSessionRequest) ProtoMessage() {}

func (x *GetWalletSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletSessionRequest.ProtoReflect.Descriptor instead.
func (*GetWalletSessionRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{23}
}

func (x *GetWalletSessionRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type GetWalletSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	Session          *SessionInfo                   `protobuf:"bytes,2,opt,name=Session,proto3" json:"Session,omitempty"`
}

func (x *GetWalletSessionResponse) Reset() {
	*x = GetWalletSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletSessionResponse) ProtoMessage() {}

func (x *GetWalletSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletSessionResponse.ProtoReflect.Descriptor instead.
func (*GetWalletSessionResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetWalletSessionResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *GetWalletSessionResponse) GetSession() *SessionInfo {
	if x != nil {
		return x.Session
	}
	return nil
}

type GetWalletSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
}

func (x *GetWalletSessionsRequest) Reset() {
	*x = GetWalletSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletSessionsRequest) ProtoMessage() {}

func (x *GetWalletSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletSessionsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletSessionsRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{25}
}

func (x *GetWalletSessionsRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

type SessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIdentity  *WalletSessionIdentity `protobuf:"bytes,1,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	SessionStartedAt uint64                 `protobuf:"varint,2,opt,name=SessionStartedAt,proto3" json:"SessionStartedAt,omitempty"`
	SessionExpiredAt uint64                 `protobuf:"varint,3,opt,name=SessionExpiredAt,proto3" json:"SessionExpiredAt,omitempty"`
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{26}
}

func (x *SessionInfo) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *SessionInfo) GetSessionStartedAt() uint64 {
	if x != nil {
		return x.SessionStartedAt
	}
	return 0
}

func (x *SessionInfo) GetSessionExpiredAt() uint64 {
	if x != nil {
		return x.SessionExpiredAt
	}
	return 0
}

type GetWalletSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	ActiveSessions   []*SessionInfo                 `protobuf:"bytes,2,rep,name=ActiveSessions,proto3" json:"ActiveSessions,omitempty"`
}

func (x *GetWalletSessionsResponse) Reset() {
	*x = GetWalletSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletSessionsResponse) ProtoMessage() {}

func (x *GetWalletSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletSessionsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletSessionsResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{27}
}

func (x *GetWalletSessionsResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *GetWalletSessionsResponse) GetActiveSessions() []*SessionInfo {
	if x != nil {
		return x.ActiveSessions
	}
	return nil
}

type CloseWalletSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity         `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
}

func (x *CloseWalletSessionsRequest) Reset() {
	*x = CloseWalletSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseWalletSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseWalletSessionsRequest) ProtoMessage() {}

func (x *CloseWalletSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseWalletSessionsRequest.ProtoReflect.Descriptor instead.
func (*CloseWalletSessionsRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{28}
}

func (x *CloseWalletSessionsRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *CloseWalletSessionsRequest) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

type CloseWalletSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity         `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
}

func (x *CloseWalletSessionsResponse) Reset() {
	*x = CloseWalletSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseWalletSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseWalletSessionsResponse) ProtoMessage() {}

func (x *CloseWalletSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseWalletSessionsResponse.ProtoReflect.Descriptor instead.
func (*CloseWalletSessionsResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{29}
}

func (x *CloseWalletSessionsResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *CloseWalletSessionsResponse) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

type SignTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity      *common.MnemonicWalletIdentity    `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	AddressIdentity       *common.DerivationAddressIdentity `protobuf:"bytes,2,opt,name=AddressIdentity,proto3" json:"AddressIdentity,omitempty"`
	SessionIdentity       *WalletSessionIdentity            `protobuf:"bytes,3,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	SignRequestIdentifier *SignRequestIdentity              `protobuf:"bytes,4,opt,name=SignRequestIdentifier,proto3" json:"SignRequestIdentifier,omitempty"`
	CreatedTxData         []byte                            `protobuf:"bytes,5,opt,name=CreatedTxData,proto3" json:"CreatedTxData,omitempty"`
}

func (x *SignTransactionRequest) Reset() {
	*x = SignTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionRequest) ProtoMessage() {}

func (x *SignTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionRequest.ProtoReflect.Descriptor instead.
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{30}
}

func (x *SignTransactionRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *SignTransactionRequest) GetAddressIdentity() *common.DerivationAddressIdentity {
	if x != nil {
		return x.AddressIdentity
	}
	return nil
}

func (x *SignTransactionRequest) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *SignTransactionRequest) GetSignRequestIdentifier() *SignRequestIdentity {
	if x != nil {
		return x.SignRequestIdentifier
	}
	return nil
}

func (x *SignTransactionRequest) GetCreatedTxData() []byte {
	if x != nil {
		return x.CreatedTxData
	}
	return nil
}

type SignTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity      *common.MnemonicWalletIdentity    `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity       *WalletSessionIdentity            `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	TxOwnerIdentity       *common.DerivationAddressIdentity `protobuf:"bytes,3,opt,name=TxOwnerIdentity,proto3" json:"TxOwnerIdentity,omitempty"`
	SignRequestIdentifier *SignRequestIdentity              `protobuf:"bytes,4,opt,name=SignRequestIdentifier,proto3" json:"SignRequestIdentifier,omitempty"`
	SignedTxData          []byte                            `protobuf:"bytes,5,opt,name=SignedTxData,proto3" json:"SignedTxData,omitempty"`
}

func (x *SignTransactionResponse) Reset() {
	*x = SignTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionResponse) ProtoMessage() {}

func (x *SignTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionResponse.ProtoReflect.Descriptor instead.
func (*SignTransactionResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{31}
}

func (x *SignTransactionResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *SignTransactionResponse) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *SignTransactionResponse) GetTxOwnerIdentity() *common.DerivationAddressIdentity {
	if x != nil {
		return x.TxOwnerIdentity
	}
	return nil
}

func (x *SignTransactionResponse) GetSignRequestIdentifier() *SignRequestIdentity {
	if x != nil {
		return x.SignRequestIdentifier
	}
	return nil
}

func (x *SignTransactionResponse) GetSignedTxData() []byte {
	if x != nil {
		return x.SignedTxData
	}
	return nil
}

type PrepareSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity *common.MnemonicWalletIdentity    `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	AddressIdentity  *common.DerivationAddressIdentity `protobuf:"bytes,2,opt,name=AddressIdentity,proto3" json:"AddressIdentity,omitempty"`
	SessionIdentity  *WalletSessionIdentity            `protobuf:"bytes,3,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
}

func (x *PrepareSignRequest) Reset() {
	*x = PrepareSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSignRequest) ProtoMessage() {}

func (x *PrepareSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSignRequest.ProtoReflect.Descriptor instead.
func (*PrepareSignRequest) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{32}
}

func (x *PrepareSignRequest) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *PrepareSignRequest) GetAddressIdentity() *common.DerivationAddressIdentity {
	if x != nil {
		return x.AddressIdentity
	}
	return nil
}

func (x *PrepareSignRequest) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

type PrepareSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MnemonicIdentity     *common.MnemonicWalletIdentity    `protobuf:"bytes,1,opt,name=MnemonicIdentity,proto3" json:"MnemonicIdentity,omitempty"`
	SessionIdentity      *WalletSessionIdentity            `protobuf:"bytes,2,opt,name=SessionIdentity,proto3" json:"SessionIdentity,omitempty"`
	TxOwnerIdentity      *common.DerivationAddressIdentity `protobuf:"bytes,3,opt,name=TxOwnerIdentity,proto3" json:"TxOwnerIdentity,omitempty"`
	SignatureRequestInfo *SignRequestData                  `protobuf:"bytes,4,opt,name=SignatureRequestInfo,proto3" json:"SignatureRequestInfo,omitempty"`
}

func (x *PrepareSignResponse) Reset() {
	*x = PrepareSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manager_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSignResponse) ProtoMessage() {}

func (x *PrepareSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSignResponse.ProtoReflect.Descriptor instead.
func (*PrepareSignResponse) Descriptor() ([]byte, []int) {
	return file_manager_api_proto_rawDescGZIP(), []int{33}
}

func (x *PrepareSignResponse) GetMnemonicIdentity() *common.MnemonicWalletIdentity {
	if x != nil {
		return x.MnemonicIdentity
	}
	return nil
}

func (x *PrepareSignResponse) GetSessionIdentity() *WalletSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *PrepareSignResponse) GetTxOwnerIdentity() *common.DerivationAddressIdentity {
	if x != nil {
		return x.TxOwnerIdentity
	}
	return nil
}

func (x *PrepareSignResponse) GetSignatureRequestInfo() *SignRequestData {
	if x != nil {
		return x.SignatureRequestInfo
	}
	return nil
}

var File_manager_api_proto protoreflect.FileDescriptor

var file_manager_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39,
	0x0a, 0x15, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x13, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x22, 0xa8, 0x02, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x50,
	0x4c, 0x41, 0x43, 0x45, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x45,
	0x50, 0x41, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x22,
	0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9e, 0x02, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a,
	0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x09, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a, 0x3c,
	0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x15, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x5d, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x5e, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x5e, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x5f, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x63, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x81, 0x02,
	0x0a, 0x18, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x82, 0x02, 0x0a, 0x19, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xed, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x06,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x20, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x5f,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x67, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x8e, 0x02, 0x0a, 0x1a, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x9a, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0xb7, 0x01, 0x0a, 0x1b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xfd, 0x02, 0x0a, 0x16, 0x53,
	0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c,
	0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfc, 0x02, 0x0a, 0x17, 0x53,
	0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x4b, 0x0a, 0x0f, 0x54, 0x78, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x54, 0x78,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x56, 0x0a,
	0x15, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54,
	0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfb, 0x01, 0x0a, 0x12, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xce, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x10, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x54, 0x78, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x54, 0x78, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xcb, 0x0b, 0x0a, 0x12, 0x48, 0x64, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12,
	0x55, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64,
	0x64, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x0c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x20, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2d, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x2f, 0x62, 0x63, 0x2d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2d, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2d, 0x68, 0x64, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2d, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manager_api_proto_rawDescOnce sync.Once
	file_manager_api_proto_rawDescData = file_manager_api_proto_rawDesc
)

func file_manager_api_proto_rawDescGZIP() []byte {
	file_manager_api_proto_rawDescOnce.Do(func() {
		file_manager_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_manager_api_proto_rawDescData)
	})
	return file_manager_api_proto_rawDescData
}

var file_manager_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_manager_api_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_manager_api_proto_goTypes = []interface{}{
	(SignRequestData_ReqStatus)(0),           // 0: manager_api.SignRequestData.ReqStatus
	(*WalletSessionIdentity)(nil),            // 1: manager_api.WalletSessionIdentity
	(*SignRequestIdentity)(nil),              // 2: manager_api.SignRequestIdentity
	(*SignRequestData)(nil),                  // 3: manager_api.SignRequestData
	(*GetEnabledWalletsRequest)(nil),         // 4: manager_api.GetEnabledWalletsRequest
	(*GetEnabledWalletsResponse)(nil),        // 5: manager_api.GetEnabledWalletsResponse
	(*AddNewWalletRequest)(nil),              // 6: manager_api.AddNewWalletRequest
	(*AddNewWalletResponse)(nil),             // 7: manager_api.AddNewWalletResponse
	(*ImportWalletRequest)(nil),              // 8: manager_api.ImportWalletRequest
	(*ImportWalletResponse)(nil),             // 9: manager_api.ImportWalletResponse
	(*EnableWalletRequest)(nil),              // 10: manager_api.EnableWalletRequest
	(*EnableWalletResponse)(nil),             // 11: manager_api.EnableWalletResponse
	(*DisableWalletRequest)(nil),             // 12: manager_api.DisableWalletRequest
	(*DisableWalletResponse)(nil),            // 13: manager_api.DisableWalletResponse
	(*DisableWalletsRequest)(nil),            // 14: manager_api.DisableWalletsRequest
	(*DisableWalletsResponse)(nil),           // 15: manager_api.DisableWalletsResponse
	(*DerivationAddressRequest)(nil),         // 16: manager_api.DerivationAddressRequest
	(*DerivationAddressResponse)(nil),        // 17: manager_api.DerivationAddressResponse
	(*DerivationAddressByRangeRequest)(nil),  // 18: manager_api.DerivationAddressByRangeRequest
	(*DerivationAddressByRangeResponse)(nil), // 19: manager_api.DerivationAddressByRangeResponse
	(*GetWalletInfoRequest)(nil),             // 20: manager_api.GetWalletInfoRequest
	(*GetWalletInfoResponse)(nil),            // 21: manager_api.GetWalletInfoResponse
	(*StartWalletSessionRequest)(nil),        // 22: manager_api.StartWalletSessionRequest
	(*StartWalletSessionResponse)(nil),       // 23: manager_api.StartWalletSessionResponse
	(*GetWalletSessionRequest)(nil),          // 24: manager_api.GetWalletSessionRequest
	(*GetWalletSessionResponse)(nil),         // 25: manager_api.GetWalletSessionResponse
	(*GetWalletSessionsRequest)(nil),         // 26: manager_api.GetWalletSessionsRequest
	(*SessionInfo)(nil),                      // 27: manager_api.SessionInfo
	(*GetWalletSessionsResponse)(nil),        // 28: manager_api.GetWalletSessionsResponse
	(*CloseWalletSessionsRequest)(nil),       // 29: manager_api.CloseWalletSessionsRequest
	(*CloseWalletSessionsResponse)(nil),      // 30: manager_api.CloseWalletSessionsResponse
	(*SignTransactionRequest)(nil),           // 31: manager_api.SignTransactionRequest
	(*SignTransactionResponse)(nil),          // 32: manager_api.SignTransactionResponse
	(*PrepareSignRequest)(nil),               // 33: manager_api.PrepareSignRequest
	(*PrepareSignResponse)(nil),              // 34: manager_api.PrepareSignResponse
	nil,                                      // 35: manager_api.GetEnabledWalletsResponse.BookmarksEntry
	(*common.MnemonicWalletIdentity)(nil),    // 36: common.MnemonicWalletIdentity
	(*common.DerivationAddressIdentity)(nil), // 37: common.DerivationAddressIdentity
	(*common.RangeRequestUnit)(nil),          // 38: common.RangeRequestUnit
}
var file_manager_api_proto_depIdxs = []int32{
	2,  // 0: manager_api.SignRequestData.Identifier:type_name -> manager_api.SignRequestIdentity
	0,  // 1: manager_api.SignRequestData.Status:type_name -> manager_api.SignRequestData.ReqStatus
	36, // 2: manager_api.GetEnabledWalletsResponse.WalletIdentities:type_name -> common.MnemonicWalletIdentity
	35, // 3: manager_api.GetEnabledWalletsResponse.Bookmarks:type_name -> manager_api.GetEnabledWalletsResponse.BookmarksEntry
	36, // 4: manager_api.AddNewWalletResponse.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 5: manager_api.ImportWalletResponse.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 6: manager_api.EnableWalletRequest.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 7: manager_api.EnableWalletResponse.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 8: manager_api.DisableWalletRequest.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 9: manager_api.DisableWalletResponse.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 10: manager_api.DisableWalletsRequest.WalletIdentities:type_name -> common.MnemonicWalletIdentity
	36, // 11: manager_api.DisableWalletsResponse.WalletIdentities:type_name -> common.MnemonicWalletIdentity
	36, // 12: manager_api.DerivationAddressRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 13: manager_api.DerivationAddressRequest.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	37, // 14: manager_api.DerivationAddressRequest.AddressIdentity:type_name -> common.DerivationAddressIdentity
	36, // 15: manager_api.DerivationAddressResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 16: manager_api.DerivationAddressResponse.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	37, // 17: manager_api.DerivationAddressResponse.AddressIdentity:type_name -> common.DerivationAddressIdentity
	36, // 18: manager_api.DerivationAddressByRangeRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 19: manager_api.DerivationAddressByRangeRequest.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	38, // 20: manager_api.DerivationAddressByRangeRequest.Ranges:type_name -> common.RangeRequestUnit
	36, // 21: manager_api.DerivationAddressByRangeResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 22: manager_api.DerivationAddressByRangeResponse.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	37, // 23: manager_api.DerivationAddressByRangeResponse.AddressIdentities:type_name -> common.DerivationAddressIdentity
	36, // 24: manager_api.GetWalletInfoRequest.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 25: manager_api.GetWalletInfoResponse.WalletIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 26: manager_api.StartWalletSessionRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 27: manager_api.StartWalletSessionResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 28: manager_api.StartWalletSessionResponse.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	36, // 29: manager_api.GetWalletSessionRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	36, // 30: manager_api.GetWalletSessionResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	27, // 31: manager_api.GetWalletSessionResponse.Session:type_name -> manager_api.SessionInfo
	36, // 32: manager_api.GetWalletSessionsRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 33: manager_api.SessionInfo.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	36, // 34: manager_api.GetWalletSessionsResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	27, // 35: manager_api.GetWalletSessionsResponse.ActiveSessions:type_name -> manager_api.SessionInfo
	36, // 36: manager_api.CloseWalletSessionsRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 37: manager_api.CloseWalletSessionsRequest.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	36, // 38: manager_api.CloseWalletSessionsResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 39: manager_api.CloseWalletSessionsResponse.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	36, // 40: manager_api.SignTransactionRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	37, // 41: manager_api.SignTransactionRequest.AddressIdentity:type_name -> common.DerivationAddressIdentity
	1,  // 42: manager_api.SignTransactionRequest.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	2,  // 43: manager_api.SignTransactionRequest.SignRequestIdentifier:type_name -> manager_api.SignRequestIdentity
	36, // 44: manager_api.SignTransactionResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 45: manager_api.SignTransactionResponse.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	37, // 46: manager_api.SignTransactionResponse.TxOwnerIdentity:type_name -> common.DerivationAddressIdentity
	2,  // 47: manager_api.SignTransactionResponse.SignRequestIdentifier:type_name -> manager_api.SignRequestIdentity
	36, // 48: manager_api.PrepareSignRequest.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	37, // 49: manager_api.PrepareSignRequest.AddressIdentity:type_name -> common.DerivationAddressIdentity
	1,  // 50: manager_api.PrepareSignRequest.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	36, // 51: manager_api.PrepareSignResponse.MnemonicIdentity:type_name -> common.MnemonicWalletIdentity
	1,  // 52: manager_api.PrepareSignResponse.SessionIdentity:type_name -> manager_api.WalletSessionIdentity
	37, // 53: manager_api.PrepareSignResponse.TxOwnerIdentity:type_name -> common.DerivationAddressIdentity
	3,  // 54: manager_api.PrepareSignResponse.SignatureRequestInfo:type_name -> manager_api.SignRequestData
	6,  // 55: manager_api.HdWalletManagerApi.AddNewWallet:input_type -> manager_api.AddNewWalletRequest
	8,  // 56: manager_api.HdWalletManagerApi.ImportWallet:input_type -> manager_api.ImportWalletRequest
	10, // 57: manager_api.HdWalletManagerApi.EnableWallet:input_type -> manager_api.EnableWalletRequest
	20, // 58: manager_api.HdWalletManagerApi.GetWalletInfo:input_type -> manager_api.GetWalletInfoRequest
	4,  // 59: manager_api.HdWalletManagerApi.GetEnabledWallets:input_type -> manager_api.GetEnabledWalletsRequest
	12, // 60: manager_api.HdWalletManagerApi.DisableWallet:input_type -> manager_api.DisableWalletRequest
	14, // 61: manager_api.HdWalletManagerApi.DisableWallets:input_type -> manager_api.DisableWalletsRequest
	22, // 62: manager_api.HdWalletManagerApi.StartWalletSession:input_type -> manager_api.StartWalletSessionRequest
	24, // 63: manager_api.HdWalletManagerApi.GetWalletSession:input_type -> manager_api.GetWalletSessionRequest
	26, // 64: manager_api.HdWalletManagerApi.GetAllWalletSessions:input_type -> manager_api.GetWalletSessionsRequest
	29, // 65: manager_api.HdWalletManagerApi.CloseWalletSession:input_type -> manager_api.CloseWalletSessionsRequest
	16, // 66: manager_api.HdWalletManagerApi.GetDerivationAddress:input_type -> manager_api.DerivationAddressRequest
	18, // 67: manager_api.HdWalletManagerApi.GetDerivationAddressByRange:input_type -> manager_api.DerivationAddressByRangeRequest
	33, // 68: manager_api.HdWalletManagerApi.PrepareSign:input_type -> manager_api.PrepareSignRequest
	31, // 69: manager_api.HdWalletManagerApi.SignTransaction:input_type -> manager_api.SignTransactionRequest
	7,  // 70: manager_api.HdWalletManagerApi.AddNewWallet:output_type -> manager_api.AddNewWalletResponse
	9,  // 71: manager_api.HdWalletManagerApi.ImportWallet:output_type -> manager_api.ImportWalletResponse
	11, // 72: manager_api.HdWalletManagerApi.EnableWallet:output_type -> manager_api.EnableWalletResponse
	21, // 73: manager_api.HdWalletManagerApi.GetWalletInfo:output_type -> manager_api.GetWalletInfoResponse
	5,  // 74: manager_api.HdWalletManagerApi.GetEnabledWallets:output_type -> manager_api.GetEnabledWalletsResponse
	13, // 75: manager_api.HdWalletManagerApi.DisableWallet:output_type -> manager_api.DisableWalletResponse
	15, // 76: manager_api.HdWalletManagerApi.DisableWallets:output_type -> manager_api.DisableWalletsResponse
	23, // 77: manager_api.HdWalletManagerApi.StartWalletSession:output_type -> manager_api.StartWalletSessionResponse
	25, // 78: manager_api.HdWalletManagerApi.GetWalletSession:output_type -> manager_api.GetWalletSessionResponse
	28, // 79: manager_api.HdWalletManagerApi.GetAllWalletSessions:output_type -> manager_api.GetWalletSessionsResponse
	30, // 80: manager_api.HdWalletManagerApi.CloseWalletSession:output_type -> manager_api.CloseWalletSessionsResponse
	17, // 81: manager_api.HdWalletManagerApi.GetDerivationAddress:output_type -> manager_api.DerivationAddressResponse
	19, // 82: manager_api.HdWalletManagerApi.GetDerivationAddressByRange:output_type -> manager_api.DerivationAddressByRangeResponse
	34, // 83: manager_api.HdWalletManagerApi.PrepareSign:output_type -> manager_api.PrepareSignResponse
	32, // 84: manager_api.HdWalletManagerApi.SignTransaction:output_type -> manager_api.SignTransactionResponse
	70, // [70:85] is the sub-list for method output_type
	55, // [55:70] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_manager_api_proto_init() }
func file_manager_api_proto_init() {
	if File_manager_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_manager_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletSessionIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequestIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnabledWalletsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnabledWalletsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableWalletsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableWalletsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivationAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivationAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivationAddressByRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivationAddressByRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartWalletSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartWalletSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseWalletSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseWalletSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manager_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manager_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manager_api_proto_goTypes,
		DependencyIndexes: file_manager_api_proto_depIdxs,
		EnumInfos:         file_manager_api_proto_enumTypes,
		MessageInfos:      file_manager_api_proto_msgTypes,
	}.Build()
	File_manager_api_proto = out.File
	file_manager_api_proto_rawDesc = nil
	file_manager_api_proto_goTypes = nil
	file_manager_api_proto_depIdxs = nil
}
